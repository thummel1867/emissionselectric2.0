{"ast":null,"code":"import _slicedToArray from\"/Users/thomashummel/sei/project-2-emission-tracker/project-2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";import{Routes,Route,Link}from\"react-router-dom\";import CountryList from\"./CountryList\";import Home from\"./Home\";import Emissions from\"./Emissions\";import\"./App.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),country=_useState2[0],setCountry=_useState2[1];return/*#__PURE__*/_jsxs(\"div\",{className:\"overall\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Carbon and Electricity\"}),/*#__PURE__*/_jsxs(\"nav\",{className:\"nav\",children:[/*#__PURE__*/_jsx(Link,{className:\"nav2\",to:\"/\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Home\"})}),/*#__PURE__*/_jsx(Link,{className:\"nav2\",to:\"/about\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"About\"})}),/*#__PURE__*/_jsx(Link,{className:\"nav2\",to:\"/countries\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Countries List\"})})]}),/*#__PURE__*/_jsx(\"main\",{className:\"main\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Home,{})}),/*#__PURE__*/_jsx(Route,{path:\"/countries\",element:/*#__PURE__*/_jsx(CountryList,{})}),/*#__PURE__*/_jsx(Route,{path:\"/emissions/:id/:name\",element:/*#__PURE__*/_jsx(Emissions,{setCountry:setCountry,country:country})})]})})]});};export default App;//pull the country list from the api ->\n//map through that so that when a button is clicked, every country will display with a link\n//each one of those links should bring up information about the country - bringing the carbon emissions associated with the following:\n//coal\n//gas\n//geothermal\n//hydro\n//nuclear\n//petroleum\n//solar photovoltaic\n//Wind\n//will have to use state to grab the name of the region and plug it into the fetch request (should there be a component for each type of electricity generation?)\n//questions for Jay:\n//mapping through countries list - use Link to generate a link for each?\n//how to manipulate fetch POST request with state\n//stretch goal - render a graph on each countries page\n//there will also be a search bar that will transport the user to the correct page\n//give the user the option to choose two different countries and show their data side by side\n//highlight comparison between countries through color, or other differentiation\n//styling\n//Thursday: \n//readme\n//deployment\n//write to API","map":{"version":3,"names":["useState","Routes","Route","Link","CountryList","Home","Emissions","App","country","setCountry"],"sources":["/Users/thomashummel/sei/project-2-emission-tracker/project-2/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport CountryList from \"./CountryList\";\nimport Home from \"./Home\";\nimport Emissions from \"./Emissions\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [country, setCountry] = useState();\n\n  return (\n    <div className=\"overall\">\n        <h1 className=\"title\">Carbon and Electricity</h1>\n      <nav className=\"nav\">\n        <Link className=\"nav2\" to=\"/\">\n          <h1>Home</h1>\n        </Link>\n        <Link className=\"nav2\" to=\"/about\">\n          <h1>About</h1>\n        </Link>\n        <Link className=\"nav2\" to=\"/countries\">\n          <h1>Countries List</h1>\n        </Link>\n      </nav>\n      <main className=\"main\">\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/countries\" element={<CountryList />} />\n          {/* <Route path=\"/about\" element={<About/>}/> */}\n          <Route\n            path=\"/emissions/:id/:name\"\n            element={<Emissions setCountry={setCountry} country={country} />}\n          />\n        </Routes>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n\n//pull the country list from the api ->\n//map through that so that when a button is clicked, every country will display with a link\n\n//each one of those links should bring up information about the country - bringing the carbon emissions associated with the following:\n//coal\n//gas\n//geothermal\n//hydro\n//nuclear\n//petroleum\n//solar photovoltaic\n//Wind\n//will have to use state to grab the name of the region and plug it into the fetch request (should there be a component for each type of electricity generation?)\n\n//questions for Jay:\n//mapping through countries list - use Link to generate a link for each?\n//how to manipulate fetch POST request with state\n\n//stretch goal - render a graph on each countries page\n//there will also be a search bar that will transport the user to the correct page\n//give the user the option to choose two different countries and show their data side by side\n//highlight comparison between countries through color, or other differentiation\n\n//styling\n\n\n//Thursday: \n//readme\n//deployment\n//write to API\n"],"mappings":"kJAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,MAAT,CAAiBC,KAAjB,CAAwBC,IAAxB,KAAoC,kBAApC,CACA,MAAOC,YAAP,KAAwB,eAAxB,CACA,MAAOC,KAAP,KAAiB,QAAjB,CACA,MAAOC,UAAP,KAAsB,aAAtB,CACA,MAAO,WAAP,C,wFAEA,GAAMC,IAAG,CAAG,QAANA,IAAM,EAAM,CAChB,cAA8BP,QAAQ,EAAtC,wCAAOQ,OAAP,eAAgBC,UAAhB,eAEA,mBACE,aAAK,SAAS,CAAC,SAAf,wBACI,WAAI,SAAS,CAAC,OAAd,oCADJ,cAEE,aAAK,SAAS,CAAC,KAAf,wBACE,KAAC,IAAD,EAAM,SAAS,CAAC,MAAhB,CAAuB,EAAE,CAAC,GAA1B,uBACE,4BADF,EADF,cAIE,KAAC,IAAD,EAAM,SAAS,CAAC,MAAhB,CAAuB,EAAE,CAAC,QAA1B,uBACE,6BADF,EAJF,cAOE,KAAC,IAAD,EAAM,SAAS,CAAC,MAAhB,CAAuB,EAAE,CAAC,YAA1B,uBACE,sCADF,EAPF,GAFF,cAaE,aAAM,SAAS,CAAC,MAAhB,uBACE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,OAAO,cAAE,KAAC,IAAD,IAAzB,EADF,cAEE,KAAC,KAAD,EAAO,IAAI,CAAC,YAAZ,CAAyB,OAAO,cAAE,KAAC,WAAD,IAAlC,EAFF,cAIE,KAAC,KAAD,EACE,IAAI,CAAC,sBADP,CAEE,OAAO,cAAE,KAAC,SAAD,EAAW,UAAU,CAAEA,UAAvB,CAAmC,OAAO,CAAED,OAA5C,EAFX,EAJF,GADF,EAbF,GADF,CA2BD,CA9BD,CAgCA,cAAeD,IAAf,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}