{"ast":null,"code":"var _jsxFileName = \"/Users/thomashummel/sei/project-2-emission-tracker/project-2/src/Emissions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Emissions = _ref => {\n  _s();\n\n  let {\n    country,\n    setCountry\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const [biomass, setBiomass] = useState();\n  const [coal, setCoal] = useState();\n  const [geothermal, setGeothermal] = useState();\n  const [hydro, setHydro] = useState(); //GAS\n\n  useEffect(() => {\n    const url = \"https://beta3.api.climatiq.io/estimate\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer 2WBP8XKDTTMMMSQBCX27SPSDD078\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        emission_factor: {\n          activity_id: \"electricity-energy_source_gas\",\n          region: id\n        },\n        parameters: {\n          money: 100,\n          money_unit: \"eur\"\n        }\n      })\n    }).then(res => res.json()).then(data => data.co2e).then(data => // console.log(data)\n    setCountry(data)).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  let twoDecimal = parseFloat(country).toFixed(2); //BIOMASS\n\n  useEffect(() => {\n    const url = \"https://beta3.api.climatiq.io/estimate\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer 2WBP8XKDTTMMMSQBCX27SPSDD078\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        emission_factor: {\n          activity_id: \"electricity-energy_source_biomass_waste\",\n          region: id\n        },\n        parameters: {\n          money: 100,\n          money_unit: \"eur\"\n        }\n      })\n    }).then(res => res.json()).then(data => data.co2e).then(data => // console.log(data)\n    setBiomass(data)).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  let threeDecimal = parseFloat(biomass).toFixed(2); //COAL\n\n  useEffect(() => {\n    const url = \"https://beta3.api.climatiq.io/estimate\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer 2WBP8XKDTTMMMSQBCX27SPSDD078\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        emission_factor: {\n          activity_id: \"electricity-energy_source_coal\",\n          region: id\n        },\n        parameters: {\n          money: 100,\n          money_unit: \"eur\"\n        }\n      })\n    }).then(res => res.json()).then(data => data.co2e).then(data => // console.log(data)\n    setCoal(data)).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  let fourDecimal = parseFloat(coal).toFixed(2); //Geothermal\n\n  useEffect(() => {\n    const url = \"https://beta3.api.climatiq.io/estimate\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer 2WBP8XKDTTMMMSQBCX27SPSDD078\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        emission_factor: {\n          activity_id: \"electricity-energy_source_geothermal\",\n          region: id\n        },\n        parameters: {\n          money: 100,\n          money_unit: \"eur\"\n        }\n      })\n    }).then(res => res.json()).then(data => data.co2e).then(data => // console.log(data)\n    setGeothermal(data)).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  let fiveDecimal = parseFloat(coal).toFixed(2); //HYDRO\n\n  useEffect(() => {\n    const url = \"https://beta3.api.climatiq.io/estimate\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer 2WBP8XKDTTMMMSQBCX27SPSDD078\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        emission_factor: {\n          activity_id: \"electricity-energy_source_hydro\",\n          region: id\n        },\n        parameters: {\n          money: 100,\n          money_unit: \"eur\"\n        }\n      })\n    }).then(res => res.json()).then(data => data.co2e).then(data => // console.log(data)\n    setHydro(data)).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  let sixDecimal = parseFloat(hydro).toFixed(2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: country !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), id, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gas\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Natural Gas: \", twoDecimal, \" kg co2e per \\u20AC100 \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"There is no emissions data on electricity generated by gas in \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: biomass !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gas\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Biomass: \", threeDecimal, \" kg co2 equivalent per \\u20AC100\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"There is no emissions data on electricity generated by biomass in\", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: coal !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gas\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Coal: \", fourDecimal, \" kg co2e per \\u20AC100\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"There is no emissions data on electricity generated by biomass in\", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: geothermal !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Geothermal: \", fiveDecimal, \" kg co2e per \\u20AC100\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"There is no emissions data on electricity generated by biomass in\", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: hydro !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Hydro: \", sixDecimal, \" kg co2e per \\u20AC100\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"There is no emissions data on electricity generated by biomass in\", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Emissions, \"e1ibNGxd16qyBTBJy7xAu0zlS5k=\", false, function () {\n  return [useParams];\n});\n\n_c = Emissions;\nexport default Emissions; //set id and country to an async function that are then declared in useEffect with arrow functions and then called within HTML\n\nvar _c;\n\n$RefreshReg$(_c, \"Emissions\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Emissions","country","setCountry","id","biomass","setBiomass","coal","setCoal","geothermal","setGeothermal","hydro","setHydro","url","fetch","method","headers","Authorization","body","JSON","stringify","emission_factor","activity_id","region","parameters","money","money_unit","then","res","json","data","co2e","catch","error","console","log","twoDecimal","parseFloat","toFixed","threeDecimal","fourDecimal","fiveDecimal","sixDecimal","undefined"],"sources":["/Users/thomashummel/sei/project-2-emission-tracker/project-2/src/Emissions.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst Emissions = ({ country, setCountry }) => {\n  const { id } = useParams();\n  const [biomass, setBiomass] = useState();\n  const [coal, setCoal] = useState();\n  const [geothermal, setGeothermal] = useState();\n  const [hydro, setHydro] = useState()\n\n  //GAS\n  useEffect(() => {\n    const url = \"https://beta3.api.climatiq.io/estimate\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer 2WBP8XKDTTMMMSQBCX27SPSDD078\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        emission_factor: {\n          activity_id: \"electricity-energy_source_gas\",\n          region: id,\n        },\n        parameters: {\n          money: 100,\n          money_unit: \"eur\",\n        },\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => data.co2e)\n      .then((data) =>\n        // console.log(data)\n        setCountry(data)\n      )\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n  let twoDecimal = parseFloat(country).toFixed(2);\n  //BIOMASS\n  useEffect(() => {\n    const url = \"https://beta3.api.climatiq.io/estimate\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer 2WBP8XKDTTMMMSQBCX27SPSDD078\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        emission_factor: {\n          activity_id: \"electricity-energy_source_biomass_waste\",\n          region: id,\n        },\n        parameters: {\n          money: 100,\n          money_unit: \"eur\",\n        },\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => data.co2e)\n      .then((data) =>\n        // console.log(data)\n        setBiomass(data)\n      )\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n  let threeDecimal = parseFloat(biomass).toFixed(2);\n\n  //COAL\n  useEffect(() => {\n    const url = \"https://beta3.api.climatiq.io/estimate\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer 2WBP8XKDTTMMMSQBCX27SPSDD078\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        emission_factor: {\n          activity_id: \"electricity-energy_source_coal\",\n          region: id,\n        },\n        parameters: {\n          money: 100,\n          money_unit: \"eur\",\n        },\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => data.co2e)\n      .then((data) =>\n        // console.log(data)\n        setCoal(data)\n      )\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n  let fourDecimal = parseFloat(coal).toFixed(2);\n\n  //Geothermal\n  useEffect(() => {\n    const url = \"https://beta3.api.climatiq.io/estimate\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer 2WBP8XKDTTMMMSQBCX27SPSDD078\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        emission_factor: {\n          activity_id: \"electricity-energy_source_geothermal\",\n          region: id,\n        },\n        parameters: {\n          money: 100,\n          money_unit: \"eur\",\n        },\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => data.co2e)\n      .then((data) =>\n        // console.log(data)\n        setGeothermal(data)\n      )\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n  let fiveDecimal = parseFloat(coal).toFixed(2);  \n\n  //HYDRO\n  useEffect(() => {\n    const url = \"https://beta3.api.climatiq.io/estimate\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer 2WBP8XKDTTMMMSQBCX27SPSDD078\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        emission_factor: {\n          activity_id: \"electricity-energy_source_hydro\",\n          region: id,\n        },\n        parameters: {\n          money: 100,\n          money_unit: \"eur\",\n        },\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => data.co2e)\n      .then((data) =>\n        // console.log(data)\n        setHydro(data)\n      )\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n  let sixDecimal = parseFloat(hydro).toFixed(2);   \n\n  return (\n    <div>\n        {/* Natual Gas */}\n      <div>\n        {country !== undefined ? (\n          <div>\n            <h1></h1>{id}\n            <div className=\"gas\">\n                <p>Natural Gas: {twoDecimal} kg co2e per €100 </p> \n                </div>\n          </div>\n        ) : (\n          <h1>\n            There is no emissions data on electricity generated by gas in {id}\n          </h1>\n        )}\n      </div>\n      {/* Biomass */}\n      <div>\n        <div>\n          {biomass !== undefined ? (\n            <div>\n              <div className=\"gas\">\n                <p>\n                  Biomass: {threeDecimal} kg co2 equivalent per €100\n                </p>\n              </div>\n            </div>\n          ) : (\n            <h1>\n              There is no emissions data on electricity generated by biomass in\n              {id}\n            </h1>\n          )}\n        </div>\n      </div>\n      {/* Coal */}\n      <div>\n        <div>\n          {coal !== undefined ? (\n            <div>\n              <div className=\"gas\"> \n              <p> Coal: {fourDecimal} kg co2e per €100</p> </div>\n            </div>\n          ) : (\n            <h1>\n              There is no emissions data on electricity generated by biomass in\n              {id}\n            </h1>\n          )}\n        </div>\n      </div>\n      {/* Geothermal */}\n      <div>\n        <div>\n          {geothermal !== undefined ? (\n            <div>\n              <div> \n              <p> Geothermal: {fiveDecimal} kg co2e per €100</p> </div>\n            </div>\n          ) : (\n            <h1>\n              There is no emissions data on electricity generated by biomass in\n              {id}\n            </h1>\n          )}\n        </div>\n      </div>\n      {/* Hydro */}\n      <div>\n        <div>\n          {hydro !== undefined ? (\n            <div>\n              <div> \n              <p> Hydro: {sixDecimal} kg co2e per €100</p> </div>\n            </div>\n          ) : (\n            <h1>\n              There is no emissions data on electricity generated by biomass in\n              {id}\n            </h1>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Emissions;\n\n//set id and country to an async function that are then declared in useEffect with arrow functions and then called within HTML\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}