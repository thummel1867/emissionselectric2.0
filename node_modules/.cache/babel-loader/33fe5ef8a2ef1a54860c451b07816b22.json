{"ast":null,"code":"var _jsxFileName = \"/Users/thomashummel/sei/project-2-emission-tracker/project-2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport CountryList from \"./CountryList\";\nimport Home from \"./Home\";\nimport Emissions from \"./Emissions\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [country, setCountry] = useState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overall\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Check Your Carbon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"nav2\",\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"nav2\",\n        to: \"/about\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"nav2\",\n        to: \"/countries\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Countries List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/countries\",\n          element: /*#__PURE__*/_jsxDEV(CountryList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/emissions/:id/:name\",\n          element: /*#__PURE__*/_jsxDEV(Emissions, {\n            setCountry: setCountry,\n            country: country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"epb1R+1qnRt6OxKVN7SJ1VAfBHw=\");\n\n_c = App;\nexport default App; //pull the country list from the api ->\n//map through that so that when a button is clicked, every country will display with a link\n//each one of those links should bring up information about the country - bringing the carbon emissions associated with the following:\n//coal\n//gas\n//geothermal\n//hydro\n//nuclear\n//petroleum\n//solar photovoltaic\n//Wind\n//will have to use state to grab the name of the region and plug it into the fetch request (should there be a component for each type of electricity generation?)\n//questions for Jay:\n//mapping through countries list - use Link to generate a link for each?\n//how to manipulate fetch POST request with state\n//stretch goal - render a graph on each countries page\n//there will also be a search bar that will transport the user to the correct page\n//give the user the option to choose two different countries and show their data side by side\n//highlight comparison between countries through color, or other differentiation\n//styling\n//Thursday: \n//readme\n//deployment\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Routes","Route","Link","CountryList","Home","Emissions","App","country","setCountry"],"sources":["/Users/thomashummel/sei/project-2-emission-tracker/project-2/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport CountryList from \"./CountryList\";\nimport Home from \"./Home\";\nimport Emissions from \"./Emissions\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [country, setCountry] = useState();\n\n  return (\n    <div className=\"overall\">\n      <nav className=\"nav\">\n        <h1 className=\"title\">Check Your Carbon</h1>\n        <Link className=\"nav2\" to=\"/\">\n          <h1>Home</h1>\n        </Link>\n        <Link className=\"nav2\" to=\"/about\">\n          <h1>About</h1>\n        </Link>\n        <Link className=\"nav2\" to=\"/countries\">\n          <h1>Countries List</h1>\n        </Link>\n      </nav>\n      <main className=\"main\">\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/countries\" element={<CountryList />} />\n          {/* <Route path=\"/about\" element={<About/>}/> */}\n          <Route\n            path=\"/emissions/:id/:name\"\n            element={<Emissions setCountry={setCountry} country={country} />}\n          />\n        </Routes>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n\n//pull the country list from the api ->\n//map through that so that when a button is clicked, every country will display with a link\n\n//each one of those links should bring up information about the country - bringing the carbon emissions associated with the following:\n//coal\n//gas\n//geothermal\n//hydro\n//nuclear\n//petroleum\n//solar photovoltaic\n//Wind\n//will have to use state to grab the name of the region and plug it into the fetch request (should there be a component for each type of electricity generation?)\n\n//questions for Jay:\n//mapping through countries list - use Link to generate a link for each?\n//how to manipulate fetch POST request with state\n\n//stretch goal - render a graph on each countries page\n//there will also be a search bar that will transport the user to the correct page\n//give the user the option to choose two different countries and show their data side by side\n//highlight comparison between countries through color, or other differentiation\n\n//styling\n\n\n//Thursday: \n//readme\n//deployment\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,kBAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,EAAtC;EAEA,oBACE;IAAK,SAAS,EAAC,SAAf;IAAA,wBACE;MAAK,SAAS,EAAC,KAAf;MAAA,wBACE;QAAI,SAAS,EAAC,OAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,IAAD;QAAM,SAAS,EAAC,MAAhB;QAAuB,EAAE,EAAC,GAA1B;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAFF,eAKE,QAAC,IAAD;QAAM,SAAS,EAAC,MAAhB;QAAuB,EAAE,EAAC,QAA1B;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QALF,eAQE,QAAC,IAAD;QAAM,SAAS,EAAC,MAAhB;QAAuB,EAAE,EAAC,YAA1B;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAaE;MAAM,SAAS,EAAC,MAAhB;MAAA,uBACE,QAAC,MAAD;QAAA,wBACE,QAAC,KAAD;UAAO,IAAI,EAAC,GAAZ;UAAgB,OAAO,eAAE,QAAC,IAAD;YAAA;YAAA;YAAA;UAAA;QAAzB;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,KAAD;UAAO,IAAI,EAAC,YAAZ;UAAyB,OAAO,eAAE,QAAC,WAAD;YAAA;YAAA;YAAA;UAAA;QAAlC;UAAA;UAAA;UAAA;QAAA,QAFF,eAIE,QAAC,KAAD;UACE,IAAI,EAAC,sBADP;UAEE,OAAO,eAAE,QAAC,SAAD;YAAW,UAAU,EAAES,UAAvB;YAAmC,OAAO,EAAED;UAA5C;YAAA;YAAA;YAAA;UAAA;QAFX;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAbF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA2BD,CA9BD;;GAAMD,G;;KAAAA,G;AAgCN,eAAeA,GAAf,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA"},"metadata":{},"sourceType":"module"}