{"ast":null,"code":"var _jsxFileName = \"/Users/thomashummel/sei/project-2-emission-tracker/project-2/src/CountryList.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url2 = \"https://beta3.api.climatiq.io/emission-factors/regions\";\n\nconst CountryList = _ref => {\n  _s();\n\n  let {\n    country,\n    setCountry\n  } = _ref;\n\n  const clearCountry = () => {\n    setCountry(undefined);\n  };\n\n  let defaultCountry;\n  useEffect(() => {\n    fetch(url2, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer 2WBP8XKDTTMMMSQBCX27SPSDD078\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      return data.results;\n    }).then(data => {\n      defaultCountry = data;\n      return setCountry(data);\n    });\n  });\n  let countryList = country !== undefined && country.map(e => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countryList\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          onClick: clearCountry,\n          className: \"countryLinks\",\n          to: \"/emissions/\" + (e === null || e === void 0 ? void 0 : e.id),\n          children: [\" Region: \", e === null || e === void 0 ? void 0 : e.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, e.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: countryList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 8\n  }, this);\n};\n\n_s(CountryList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CountryList;\nexport default CountryList; //create an array set the array to the data and then onClick set the data to the arrray\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryList\");","map":{"version":3,"names":["Link","useEffect","useRef","url2","CountryList","country","setCountry","clearCountry","undefined","defaultCountry","fetch","method","headers","Authorization","then","res","json","data","results","countryList","map","e","id","name"],"sources":["/Users/thomashummel/sei/project-2-emission-tracker/project-2/src/CountryList.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport  { useEffect, useRef } from 'react';\n\nconst url2 = \"https://beta3.api.climatiq.io/emission-factors/regions\";\n\nconst CountryList = ({country, setCountry}) => {\n\nconst clearCountry = () => {\n    setCountry(undefined)\n}\n\nlet defaultCountry\n\nuseEffect(() => { \n  fetch(url2, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer 2WBP8XKDTTMMMSQBCX27SPSDD078\",\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((res) => res.json())\n    .then((data) => {\n      return data.results})\n    .then((data) => {\n    defaultCountry = data\n      return setCountry(data);\n    })\n}); \n  let countryList =\n  country !== undefined && country.map(e => \n    {\n    return (\n      <div className=\"countryList\" key={e.id}>\n        <p>\n          <Link onClick = {clearCountry} className=\"countryLinks\" to={\"/emissions/\" + e?.id}> Region: {e?.name}</Link>\n        </p>\n      </div>\n)});\nreturn <div>{countryList}</div>;\n};\n\nexport default CountryList;\n\n\n//create an array set the array to the data and then onClick set the data to the arrray\n"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAAUC,SAAV,EAAqBC,MAArB,QAAmC,OAAnC;;AAEA,MAAMC,IAAI,GAAG,wDAAb;;AAEA,MAAMC,WAAW,GAAG,QAA2B;EAAA;;EAAA,IAA1B;IAACC,OAAD;IAAUC;EAAV,CAA0B;;EAE/C,MAAMC,YAAY,GAAG,MAAM;IACvBD,UAAU,CAACE,SAAD,CAAV;EACH,CAFD;;EAIA,IAAIC,cAAJ;EAEAR,SAAS,CAAC,MAAM;IACdS,KAAK,CAACP,IAAD,EAAO;MACVQ,MAAM,EAAE,KADE;MAEVC,OAAO,EAAE;QACPC,aAAa,EAAE,qCADR;QAEP,gBAAgB;MAFT;IAFC,CAAP,CAAL,CAOGC,IAPH,CAOSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPjB,EAQGF,IARH,CAQSG,IAAD,IAAU;MACd,OAAOA,IAAI,CAACC,OAAZ;IAAoB,CATxB,EAUGJ,IAVH,CAUSG,IAAD,IAAU;MAChBR,cAAc,GAAGQ,IAAjB;MACE,OAAOX,UAAU,CAACW,IAAD,CAAjB;IACD,CAbH;EAcD,CAfQ,CAAT;EAgBE,IAAIE,WAAW,GACfd,OAAO,KAAKG,SAAZ,IAAyBH,OAAO,CAACe,GAAR,CAAYC,CAAC,IACpC;IACA,oBACE;MAAK,SAAS,EAAC,aAAf;MAAA,uBACE;QAAA,uBACE,QAAC,IAAD;UAAM,OAAO,EAAId,YAAjB;UAA+B,SAAS,EAAC,cAAzC;UAAwD,EAAE,EAAE,iBAAgBc,CAAhB,aAAgBA,CAAhB,uBAAgBA,CAAC,CAAEC,EAAnB,CAA5D;UAAA,wBAA6FD,CAA7F,aAA6FA,CAA7F,uBAA6FA,CAAC,CAAEE,IAAhG;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF,GAAkCF,CAAC,CAACC,EAApC;MAAA;MAAA;MAAA;IAAA,QADF;EAMF,CARyB,CADzB;EAUF,oBAAO;IAAA,UAAMH;EAAN;IAAA;IAAA;IAAA;EAAA,QAAP;AACC,CAnCD;;GAAMf,W;;KAAAA,W;AAqCN,eAAeA,WAAf,C,CAGA"},"metadata":{},"sourceType":"module"}