{"ast":null,"code":"var _jsxFileName = \"/Users/thomashummel/sei/project-2-emission-tracker/project-2/src/Emissions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Emissions = _ref => {\n  _s();\n\n  let {\n    country,\n    setCountry\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const [biomass, setBiomass] = useState();\n  const [coal, setCoal] = useState();\n  const [geothermal, setGeothermal] = useState();\n  const [hydro, setHydro] = useState();\n  const [nuclear, setNuclear] = useState();\n  const [pet, setPet] = useState();\n  const [solar, setSolar] = useState();\n  const [wind, setWind] = useState(); //GAS\n\n  useEffect(() => {\n    const url = \"https://beta3.api.climatiq.io/estimate\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer 2WBP8XKDTTMMMSQBCX27SPSDD078\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        emission_factor: {\n          activity_id: \"electricity-energy_source_gas\",\n          region: id\n        },\n        parameters: {\n          money: 100,\n          money_unit: \"eur\"\n        }\n      })\n    }).then(res => res.json()).then(data => data.co2e).then(data => // console.log(data)\n    setCountry(data)).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  let twoDecimal = parseFloat(country).toFixed(2); //BIOMASS\n\n  useEffect(() => {\n    const url = \"https://beta3.api.climatiq.io/estimate\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer 2WBP8XKDTTMMMSQBCX27SPSDD078\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        emission_factor: {\n          activity_id: \"electricity-energy_source_biomass_waste\",\n          region: id\n        },\n        parameters: {\n          money: 100,\n          money_unit: \"eur\"\n        }\n      })\n    }).then(res => res.json()).then(data => data.co2e).then(data => // console.log(data)\n    setBiomass(data)).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  let threeDecimal = parseFloat(biomass).toFixed(2); //COAL\n\n  useEffect(() => {\n    const url = \"https://beta3.api.climatiq.io/estimate\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer 2WBP8XKDTTMMMSQBCX27SPSDD078\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        emission_factor: {\n          activity_id: \"electricity-energy_source_coal\",\n          region: id\n        },\n        parameters: {\n          money: 100,\n          money_unit: \"eur\"\n        }\n      })\n    }).then(res => res.json()).then(data => data.co2e).then(data => // console.log(data)\n    setCoal(data)).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  let fourDecimal = parseFloat(coal).toFixed(2); //Geothermal\n\n  useEffect(() => {\n    const url = \"https://beta3.api.climatiq.io/estimate\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer 2WBP8XKDTTMMMSQBCX27SPSDD078\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        emission_factor: {\n          activity_id: \"electricity-energy_source_geothermal\",\n          region: id\n        },\n        parameters: {\n          money: 100,\n          money_unit: \"eur\"\n        }\n      })\n    }).then(res => res.json()).then(data => data.co2e).then(data => // console.log(data)\n    setGeothermal(data)).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  let fiveDecimal = parseFloat(coal).toFixed(2); //HYDRO\n\n  useEffect(() => {\n    const url = \"https://beta3.api.climatiq.io/estimate\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer 2WBP8XKDTTMMMSQBCX27SPSDD078\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        emission_factor: {\n          activity_id: \"electricity-energy_source_hydro\",\n          region: id\n        },\n        parameters: {\n          money: 100,\n          money_unit: \"eur\"\n        }\n      })\n    }).then(res => res.json()).then(data => data.co2e).then(data => // console.log(data)\n    setHydro(data)).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  let sixDecimal = parseFloat(hydro).toFixed(2); //NUCLEAR\n\n  useEffect(() => {\n    const url = \"https://beta3.api.climatiq.io/estimate\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer 2WBP8XKDTTMMMSQBCX27SPSDD078\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        emission_factor: {\n          activity_id: \"electricity-energy_source_nuclear\",\n          region: id\n        },\n        parameters: {\n          money: 100,\n          money_unit: \"eur\"\n        }\n      })\n    }).then(res => res.json()).then(data => data.co2e).then(data => // console.log(data)\n    setNuclear(data)).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  let sevenDecimal = parseFloat(nuclear).toFixed(2); //Petroleum\n\n  useEffect(() => {\n    const url = \"https://beta3.api.climatiq.io/estimate\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer 2WBP8XKDTTMMMSQBCX27SPSDD078\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        emission_factor: {\n          activity_id: \"electricity-energy_source_petroleum_other_oil_derivatives\",\n          region: id\n        },\n        parameters: {\n          money: 100,\n          money_unit: \"eur\"\n        }\n      })\n    }).then(res => res.json()).then(data => data.co2e).then(data => // console.log(data)\n    setPet(data)).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  let eightDecimal = parseFloat(pet).toFixed(2); //Solar\n\n  useEffect(() => {\n    const url = \"https://beta3.api.climatiq.io/estimate\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer 2WBP8XKDTTMMMSQBCX27SPSDD078\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        emission_factor: {\n          activity_id: \"electricity-energy_source_solar_photovoltaic\",\n          region: id\n        },\n        parameters: {\n          money: 100,\n          money_unit: \"eur\"\n        }\n      })\n    }).then(res => res.json()).then(data => data.co2e).then(data => // console.log(data)\n    setSolar(data)).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  let nineDecimal = parseFloat(solar).toFixed(2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: country !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gas\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Natural Gas: \", twoDecimal, \" kg co2e per \\u20AC100 \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"There is no emissions data on electricity generated by gas in \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: biomass !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gas\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Biomass: \", threeDecimal, \" kg co2 equivalent per \\u20AC100\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"There is no emissions data on electricity generated by biomass in\", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: coal !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gas\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Coal: \", fourDecimal, \" kg co2e per \\u20AC100\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"There is no emissions data on electricity generated by biomass in\", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: geothermal !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Geothermal: \", fiveDecimal, \" kg co2e per \\u20AC100\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"There is no emissions data on electricity generated by biomass in\", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: hydro !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Hydro: \", sixDecimal, \" kg co2e per \\u20AC100\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"There is no emissions data on electricity generated by biomass in\", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: hydro !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Nuclear: \", sevenDecimal, \" kg co2e per \\u20AC100\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"There is no emissions data on electricity generated by biomass in\", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: hydro !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", \"Petroleum and other oil derivatives: \", eightDecimal, \" kg co2e per \\u20AC100\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"There is no emissions data on electricity generated by Petroleum and other oil derivaties in\", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: hydro !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", \"Solarvoltaic: \", nineDecimal, \" kg co2e per \\u20AC100\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"There is no emissions data on electricity generated by Solarvoltaic in\", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Emissions, \"wWVnzzxzIslGdyvrsYMj8aD2I2c=\", false, function () {\n  return [useParams];\n});\n\n_c = Emissions;\nexport default Emissions; //set id and country to an async function that are then declared in useEffect with arrow functions and then called within HTML\n\nvar _c;\n\n$RefreshReg$(_c, \"Emissions\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Emissions","country","setCountry","id","biomass","setBiomass","coal","setCoal","geothermal","setGeothermal","hydro","setHydro","nuclear","setNuclear","pet","setPet","solar","setSolar","wind","setWind","url","fetch","method","headers","Authorization","body","JSON","stringify","emission_factor","activity_id","region","parameters","money","money_unit","then","res","json","data","co2e","catch","error","console","log","twoDecimal","parseFloat","toFixed","threeDecimal","fourDecimal","fiveDecimal","sixDecimal","sevenDecimal","eightDecimal","nineDecimal","undefined"],"sources":["/Users/thomashummel/sei/project-2-emission-tracker/project-2/src/Emissions.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst Emissions = ({ country, setCountry }) => {\n  const { id } = useParams();\n  const [biomass, setBiomass] = useState();\n  const [coal, setCoal] = useState();\n  const [geothermal, setGeothermal] = useState();\n  const [hydro, setHydro] = useState();\n  const [nuclear, setNuclear] = useState();\n  const [pet, setPet] = useState();\n  const [solar, setSolar] = useState();\n  const [wind, setWind] = useState();\n  //GAS\n  useEffect(() => {\n    const url = \"https://beta3.api.climatiq.io/estimate\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer 2WBP8XKDTTMMMSQBCX27SPSDD078\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        emission_factor: {\n          activity_id: \"electricity-energy_source_gas\",\n          region: id,\n        },\n        parameters: {\n          money: 100,\n          money_unit: \"eur\",\n        },\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => data.co2e)\n      .then((data) =>\n        // console.log(data)\n        setCountry(data)\n      )\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n  let twoDecimal = parseFloat(country).toFixed(2);\n  //BIOMASS\n  useEffect(() => {\n    const url = \"https://beta3.api.climatiq.io/estimate\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer 2WBP8XKDTTMMMSQBCX27SPSDD078\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        emission_factor: {\n          activity_id: \"electricity-energy_source_biomass_waste\",\n          region: id,\n        },\n        parameters: {\n          money: 100,\n          money_unit: \"eur\",\n        },\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => data.co2e)\n      .then((data) =>\n        // console.log(data)\n        setBiomass(data)\n      )\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n  let threeDecimal = parseFloat(biomass).toFixed(2);\n\n  //COAL\n  useEffect(() => {\n    const url = \"https://beta3.api.climatiq.io/estimate\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer 2WBP8XKDTTMMMSQBCX27SPSDD078\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        emission_factor: {\n          activity_id: \"electricity-energy_source_coal\",\n          region: id,\n        },\n        parameters: {\n          money: 100,\n          money_unit: \"eur\",\n        },\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => data.co2e)\n      .then((data) =>\n        // console.log(data)\n        setCoal(data)\n      )\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n  let fourDecimal = parseFloat(coal).toFixed(2);\n\n  //Geothermal\n  useEffect(() => {\n    const url = \"https://beta3.api.climatiq.io/estimate\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer 2WBP8XKDTTMMMSQBCX27SPSDD078\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        emission_factor: {\n          activity_id: \"electricity-energy_source_geothermal\",\n          region: id,\n        },\n        parameters: {\n          money: 100,\n          money_unit: \"eur\",\n        },\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => data.co2e)\n      .then((data) =>\n        // console.log(data)\n        setGeothermal(data)\n      )\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n  let fiveDecimal = parseFloat(coal).toFixed(2);\n\n  //HYDRO\n  useEffect(() => {\n    const url = \"https://beta3.api.climatiq.io/estimate\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer 2WBP8XKDTTMMMSQBCX27SPSDD078\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        emission_factor: {\n          activity_id: \"electricity-energy_source_hydro\",\n          region: id,\n        },\n        parameters: {\n          money: 100,\n          money_unit: \"eur\",\n        },\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => data.co2e)\n      .then((data) =>\n        // console.log(data)\n        setHydro(data)\n      )\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n  let sixDecimal = parseFloat(hydro).toFixed(2);\n\n  //NUCLEAR\n  useEffect(() => {\n    const url = \"https://beta3.api.climatiq.io/estimate\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer 2WBP8XKDTTMMMSQBCX27SPSDD078\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        emission_factor: {\n          activity_id: \"electricity-energy_source_nuclear\",\n          region: id,\n        },\n        parameters: {\n          money: 100,\n          money_unit: \"eur\",\n        },\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => data.co2e)\n      .then((data) =>\n        // console.log(data)\n        setNuclear(data)\n      )\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n  let sevenDecimal = parseFloat(nuclear).toFixed(2);\n\n  //Petroleum\n  useEffect(() => {\n    const url = \"https://beta3.api.climatiq.io/estimate\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer 2WBP8XKDTTMMMSQBCX27SPSDD078\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        emission_factor: {\n          activity_id:\n            \"electricity-energy_source_petroleum_other_oil_derivatives\",\n          region: id,\n        },\n        parameters: {\n          money: 100,\n          money_unit: \"eur\",\n        },\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => data.co2e)\n      .then((data) =>\n        // console.log(data)\n        setPet(data)\n      )\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n  let eightDecimal = parseFloat(pet).toFixed(2);\n\n  //Solar\n  useEffect(() => {\n    const url = \"https://beta3.api.climatiq.io/estimate\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer 2WBP8XKDTTMMMSQBCX27SPSDD078\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        emission_factor: {\n          activity_id: \"electricity-energy_source_solar_photovoltaic\",\n          region: id,\n        },\n        parameters: {\n          money: 100,\n          money_unit: \"eur\",\n        },\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => data.co2e)\n      .then((data) =>\n        // console.log(data)\n        setSolar(data)\n      )\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n  let nineDecimal = parseFloat(solar).toFixed(2);\n\n  return (\n    <div>\n      {/* Natual Gas */}\n      <div>\n        {country !== undefined ? (\n          <div>\n            <h1>{id}</h1>\n            <div className=\"gas\">\n              <p>Natural Gas: {twoDecimal} kg co2e per €100 </p>\n            </div>\n          </div>\n        ) : (\n          <h1>\n            There is no emissions data on electricity generated by gas in {id}\n          </h1>\n        )}\n      </div>\n      {/* Biomass */}\n      <div>\n        <div>\n          {biomass !== undefined ? (\n            <div>\n              <div className=\"gas\">\n                <p>Biomass: {threeDecimal} kg co2 equivalent per €100</p>\n              </div>\n            </div>\n          ) : (\n            <h1>\n              There is no emissions data on electricity generated by biomass in\n              {id}\n            </h1>\n          )}\n        </div>\n      </div>\n      {/* Coal */}\n      <div>\n        <div>\n          {coal !== undefined ? (\n            <div>\n              <div className=\"gas\">\n                <p> Coal: {fourDecimal} kg co2e per €100</p>{\" \"}\n              </div>\n            </div>\n          ) : (\n            <h1>\n              There is no emissions data on electricity generated by biomass in\n              {id}\n            </h1>\n          )}\n        </div>\n      </div>\n      {/* Geothermal */}\n      <div>\n        <div>\n          {geothermal !== undefined ? (\n            <div>\n              <div>\n                <p> Geothermal: {fiveDecimal} kg co2e per €100</p>{\" \"}\n              </div>\n            </div>\n          ) : (\n            <h1>\n              There is no emissions data on electricity generated by biomass in\n              {id}\n            </h1>\n          )}\n        </div>\n      </div>\n      {/* Hydro */}\n      <div>\n        <div>\n          {hydro !== undefined ? (\n            <div>\n              <div>\n                <p> Hydro: {sixDecimal} kg co2e per €100</p>{\" \"}\n              </div>\n            </div>\n          ) : (\n            <h1>\n              There is no emissions data on electricity generated by biomass in\n              {id}\n            </h1>\n          )}\n        </div>\n      </div>\n      {/* NUCLEAR */}\n      <div>\n        <div>\n          {hydro !== undefined ? (\n            <div>\n              <div>\n                <p> Nuclear: {sevenDecimal} kg co2e per €100</p>{\" \"}\n              </div>\n            </div>\n          ) : (\n            <h1>\n              There is no emissions data on electricity generated by biomass in\n              {id}\n            </h1>\n          )}\n        </div>\n      </div>\n      {/* Petroleum */}\n      <div>\n        <div>\n          {hydro !== undefined ? (\n            <div>\n              <div>\n                <p>\n                  {\" \"}\n                  Petroleum and other oil derivatives: {eightDecimal} kg co2e\n                  per €100\n                </p>{\" \"}\n              </div>\n            </div>\n          ) : (\n            <h1>\n              There is no emissions data on electricity generated by Petroleum and other oil derivaties in\n              {id}\n            </h1>\n          )}\n        </div>\n      </div>\n      {/* Solar */}\n      <div>\n        <div>\n          {hydro !== undefined ? (\n            <div>\n              <div>\n                <p>\n                  {\" \"}\n                  Solarvoltaic: {nineDecimal} kg co2e\n                  per €100\n                </p>{\" \"}\n              </div>\n            </div>\n          ) : (\n            <h1>\n              There is no emissions data on electricity generated by Solarvoltaic in\n              {id}\n            </h1>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Emissions;\n\n//set id and country to an async function that are then declared in useEffect with arrow functions and then called within HTML\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}